plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${mod_version}+${minecraft_version}"
group = project.maven_group

repositories {
	maven { url 'https://server.bbkr.space/artifactory/libs-release' }
	maven { url 'https://maven.terraformersmc.com/' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://www.cursemaven.com' }
  maven { url 'https://maven.minecraftforge.net/' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Cloth
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	// Terraform
  modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_version}"
	include "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_version}"
  modImplementation "com.terraformersmc.terraform-api:terraform-shapes-api-v1:${project.terraform_version}"
/*   modImplementation "com.terraformersmc:biolith:${biolith_version}"

  // Promenade
  modImplementation "curse.maven:promenade-399648:${project.promenade_version}"
  modImplementation "curse.maven:dawnapi-399309:${project.dawn_version}"*/
}

loom {
	accessWidenerPath = file("src/main/resources/blockus.aw")

	runs {
		datagen {
			server()

			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
      vmArg "-Dfabric-api.datagen.modid=blockus"
      vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

			runDir "build/datagen"
		}
	}
}
assemble.dependsOn(runDatagen)

sourceSets {
	main {
		resources {
			srcDirs += [
				"src/main/generated"
			]
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}


  
